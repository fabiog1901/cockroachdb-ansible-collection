---
- name: Get info from the instantiated servers
  os_server_info:
    interface: public
    region_name: "{{ _infra_item.region }}"
    filters:
      metadata:
        deployment_id: "{{ deployment_id }}"
        cluster_name: "{{ _infra_item.cluster_name | default(_cluster_name) }}"
  register: _os_instances

- name: Wait for SSH to come up
  wait_for:
    host: "{{ item.private_v4 }}"
    port: 22
    timeout: 360
    sleep: 5
    state: started
  loop: "{{ _os_instances.openstack_servers }}"

- name: add instances to inventory groups
  add_host:
    name: "{{ item.private_v4 }}"
    groups: "{{ item.metadata.ansible_inv_groups | from_json + [item.metadata.ansible_cluster_name] }}"
    extra_vars: "{{ item.metadata.ansible_extra_vars | from_json }}"
    cluster_name: "{{ item.metadata.ansible_cluster_name }}"
    cloud_provider: openstack
    #ansible_private_key_file: '{{ _infra_item.private_key_path }}'
    ansible_user: "{{ item.metadata.ansible_user }}"

    public_hostname: "ip-{{ item.private_v4.split('.') | join('-')  }}.{{ domain }}"
    public_ip: "{{ item.private_v4 }}"
    private_hostname: "ip-{{ item.private_v4.split('.') | join('-')  }}.{{ domain }}"
    private_ip: "{{ item.private_v4 }}"
    
    host_template:    "{{ item.metadata.host_template | default(omit) }}"
  loop: "{{ _os_instances.openstack_servers }}"
